# Use the dicts generated by create_dicts.py

import numpy as np
import os
import json
from functions import *
import matplotlib.pyplot as plt
from matplotlib import rc
#import create_dicts
# ------- my personal graphing style --------------------

#plt.style.use('ggplot')

golden_mean = (np.sqrt(5)-1.0)/2.0 # Aesthetic ratio
fig_width = 8. # Width in inches
fig_height = 1.1*fig_width*golden_mean # Height in inches
fig_size = [fig_width,fig_height] # Figure size
params = {'backend': 'pdf',
'legend.fontsize': 14,
'xtick.labelsize' : 14,
'ytick.labelsize' : 14,
'axes.labelsize' : 16,
'figure.figsize': fig_size}
plt.rcParams.update(params)
rc("font", **{"size": 10, "family": "serif", "serif": ["Computer Modern"]})
rc("text", usetex=True)
# -------------------------------------------------------

global thresholds
thresholds = np.linspace(0.02,0.98,25)
models =models =r"C:\\Users\\USER\\OneDrive - Stellenbosch University\\Masters\\Thesis\\virtual_envs\\coldb_files\\four_models\\"
# Get dicts:
for model in os.listdir(models):
    print(model)
    dicts_root = r"C:\\Users\\USER\\OneDrive - Stellenbosch University\\Masters\\Thesis\\virtual_envs\\coldb_files\\four_models\\" + model + "\\dicts"

    #dicts to open

    #main
    model_dict_file_name = 'model_dict.json'
    model_dict_path = os.path.join(dicts_root,model_dict_file_name)
    with open(model_dict_path) as d:
        model_dict = json.load(d)

    # Get data from dicts    
    error = model_dict[model]
    plt.plot(thresholds,error,label = model)

plt.xlabel("Threshold")
plt.ylabel("Average Error over all images")
plt.title(" MAE vs threshold value")
plt.legend()

plt.grid()


plt.savefig("myImagePDF.pdf", format="pdf", bbox_inches="tight")


